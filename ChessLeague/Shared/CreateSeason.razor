@using System.Net.Http
@using System.Text.Json
@inject HttpClient Http

<!-- Register a Player -->
<form class="container" id="signUpForm">
    <div class="row justify-content-center">
        <div class="col-auto">
            <label for="newSeasonName">Season Name:</label>
        </div>
        <div class="col-auto">
            <input type="text" id="newSeasonName" name="newSeasonName"  @bind-value="newSeason.Name" />
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-auto">
            <label for="newSeasonName">Start Date:</label>
        </div>
        <div class="col-auto">
            <input type="datetime-local" @bind="newSeason.StartDate">
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-auto">
            <label for="newSeasonName">End Date:</label>
        </div>
        <div class="col-auto">
            <input type="datetime-local" @bind="newSeason.EndDate">
        </div>
    </div>
    
    <div class="modal-footer justify-content-center" style="border:none; margin: 0px;">
        <button type="submit" class="btn btn-primary" @onclick="createSeason">Create New Season</button>
        <button type="button" class="btn btn-primary" @onclick="modal.Close">Cancel</button>
    </div>
</form>

@code{

    [Parameter]
    public Modal modal { get; set; }
   
    public Season newSeason = new Season();

    private async Task createSeason()
    {
        try{
            SeasonCreate seasonReq = new SeasonCreate();
            seasonReq.Name = newSeason.Name;
            seasonReq.StartDate = newSeason.StartDate.ToString("yyyy-MM-ddTHH:mm:ss") + ".000-05:00";
            seasonReq.EndDate = newSeason.EndDate.ToString("yyyy-MM-ddTHH:mm:ss") + ".000-05:00";


            var json = JsonSerializer.Serialize(newSeason);
            Console.WriteLine(json);
            var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");

            var response = await Http.PostAsync("https://lrs-chess-ratings.com/season", content);
            response.EnsureSuccessStatusCode();

            var newPlayerJson = await response.Content.ReadAsStringAsync();
            var options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
            var createdPlayer = JsonSerializer.Deserialize<Player>(newPlayerJson, options);

        }
        catch (HttpRequestException ex)
        {
            // log or display the error message as needed
        }
        catch (JsonException ex)
        {
            // log or display the error message as needed
        }

        modal.Close();
        OnInitializedAsync();
    }
    
    
}